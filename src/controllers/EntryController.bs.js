// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var $$Date = require("../bindings/Date.bs.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Utils = require("../Utils.bs.js");
var Relude_IO = require("relude/src/Relude_IO.bs.js");
var Relude_Int = require("relude/src/Relude_Int.bs.js");
var Relude_List = require("relude/src/Relude_List.bs.js");
var Relude_Option = require("relude/src/Relude_Option.bs.js");

function dayTimestamp(date) {
  return $$Date.make(date.getFullYear(), $$Date.getMonth(date), date.getDate(), undefined, undefined, undefined).getTime();
}

function makeResponse(entries, year, month, day, slug) {
  var timestamp = $$Date.make(year, month, day, undefined, undefined, undefined).getTime();
  return Relude_IO.map((function (entry) {
                return /* Page */Block.__(0, [
                          /* data *//* Entry */Block.__(3, [
                              /* title */entry.title,
                              /* timestamp */timestamp,
                              /* text */entry.text,
                              /* tags */entry.tags,
                              /* previous */Relude_Option.map((function (entry) {
                                      return entry.title;
                                    }), Curry._2(Relude_List.find, (function (entry) {
                                          return dayTimestamp(entry.date) < timestamp;
                                        }), Relude_List.sortBy((function (a, b) {
                                              return Curry._2(Relude_Int.compare, dayTimestamp(b.date), dayTimestamp(a.date));
                                            }), entries))),
                              /* next */Relude_Option.map((function (entry) {
                                      return entry.title;
                                    }), Curry._2(Relude_List.find, (function (entry) {
                                          return dayTimestamp(entry.date) > timestamp;
                                        }), Relude_List.sortBy((function (a, b) {
                                              return Curry._2(Relude_Int.compare, dayTimestamp(a.date), dayTimestamp(b.date));
                                            }), entries)))
                            ]),
                          /* status */200
                        ]);
              }), Relude_IO.fromOption((function (prim) {
                    
                  }), Curry._2(Relude_List.find, (function (entry) {
                        if (dayTimestamp(entry.date) === timestamp) {
                          return Curry._1(Utils.slug(undefined), entry.title) === slug;
                        } else {
                          return false;
                        }
                      }), entries)));
}

exports.dayTimestamp = dayTimestamp;
exports.makeResponse = makeResponse;
/* Utils Not a pure module */
