// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.bs.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Route from "../../Route.bs.js";
import * as Style from "../Style.bs.js";
import * as Utils from "../../Utils.bs.js";
import * as React from "react";
import * as EntriesList from "../components/EntriesList.bs.js";

var className = Curry._1(Css.merge, {
      hd: Style.smallCapsClassName,
      tl: {
        hd: Curry._1(Css.style, {
              hd: Css.fontSize(Css.rem(1.25)),
              tl: {
                hd: Css.marginBottom(Css.rem(1.6)),
                tl: /* [] */0
              }
            }),
        tl: /* [] */0
      }
    });

function TagSearchPage$Label(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: className
            }, children);
}

var Label = {
  className: className,
  make: TagSearchPage$Label
};

function TagSearchPage(Props) {
  var activeRoute = Props.activeRoute;
  var param = Props.data;
  var total = param.total;
  var tag = param.tag;
  var buildPageRoute = function (page) {
    return Route.tagSearch(Utils.slug(tag), page, undefined);
  };
  var label = total === 1 ? "entry" : "entries";
  return React.createElement(React.Fragment, undefined, React.createElement(TagSearchPage$Label, {
                  children: "" + total + " " + label + " tagged \"" + tag + "\""
                }), React.createElement(EntriesList.make, {
                  buildPageRoute: buildPageRoute,
                  activeRoute: activeRoute,
                  page: param.page,
                  total: total,
                  entries: param.entries
                }));
}

var make = TagSearchPage;

export {
  Label ,
  make ,
  
}
/* className Not a pure module */
