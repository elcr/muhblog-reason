// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Css from "bs-css-emotion/src/Css.js";
import * as $$Date from "../../bindings/Date.bs.js";
import * as Arrow from "../components/Arrow.bs.js";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Style from "../Style.bs.js";
import * as Utils from "../../Utils.bs.js";
import * as React from "react";
import * as Heading from "../components/Heading.bs.js";
import * as Markdown from "../components/Markdown.bs.js";
import * as RouteLink from "../components/RouteLink.bs.js";
import * as Timestamp from "../components/Timestamp.bs.js";
import * as Relude_List from "relude/src/Relude_List.bs.js";
import * as Relude_Option from "relude/src/Relude_Option.bs.js";
import * as Relude_Function from "relude/src/Relude_Function.bs.js";

var className = Curry._1(Css.style, /* :: */[
      Css.marginBottom(Css.rem(1.6)),
      /* :: */[
        Css.paddingBottom(Css.rem(0.3)),
        /* :: */[
          Relude_Function.uncurry3(Css.borderBottom, Style.border),
          /* [] */0
        ]
      ]
    ]);

function EntryPage$Header(Props) {
  var children = Props.children;
  return React.createElement("header", {
              className: className
            }, children);
}

var Header = {
  className: className,
  make: EntryPage$Header
};

var className$1 = Curry._1(Css.style, /* :: */[
      Css.fontSize(Css.rem(1.75)),
      /* :: */[
        Css.marginBottom(Css.rem(1.0)),
        /* [] */0
      ]
    ]);

function EntryPage$StyledHeading(Props) {
  var children = Props.children;
  return React.createElement(Heading.make, {
              className: className$1,
              children: children
            });
}

var StyledHeading = {
  className: className$1,
  make: EntryPage$StyledHeading
};

var className$2 = Curry._1(Css.style, /* :: */[
      Css.display(Css.inlineBlock),
      /* :: */[
        Css.fontStyle(Css.italic),
        /* :: */[
          Css.margin2(Css.zero, Css.rem(0.6)),
          /* :: */[
            Css.firstOfType(/* :: */[
                  Css.margin(Css.zero),
                  /* [] */0
                ]),
            /* [] */0
          ]
        ]
      ]
    ]);

function EntryPage$TagItem(Props) {
  var tag = Props.tag;
  var route_000 = /* slug */Curry._1(Utils.slug(undefined), tag);
  var route = /* TagSearch */Block.__(1, [
      route_000,
      /* page */1
    ]);
  return React.createElement("li", {
              className: className$2
            }, React.createElement(RouteLink.make, {
                  route: route,
                  children: tag
                }));
}

var TagItem = {
  className: className$2,
  make: EntryPage$TagItem
};

var className$3 = Curry._1(Css.style, /* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.flexWrap(Css.wrap),
        /* :: */[
          Css.margin(Css.zero),
          /* :: */[
            Css.padding(Css.zero),
            /* [] */0
          ]
        ]
      ]
    ]);

function EntryPage$TagList(Props) {
  var tags = Props.tags;
  var tags$1 = Relude_List.map((function (tag) {
            return React.createElement(EntryPage$TagItem, {
                        tag: tag,
                        key: tag
                      });
          }))(tags);
  return React.createElement("ul", {
              className: className$3
            }, Utils.reactList(tags$1));
}

var TagList = {
  className: className$3,
  make: EntryPage$TagList
};

var className$4 = Curry._1(Css.style, /* :: */[
      Css.display(Css.block),
      /* :: */[
        Css.marginBottom(Css.rem(0.3)),
        /* [] */0
      ]
    ]);

function EntryPage$StyledTimestamp(Props) {
  var date = Props.date;
  return React.createElement(Timestamp.make, {
              className: className$4,
              date: date
            });
}

var StyledTimestamp = {
  className: className$4,
  make: EntryPage$StyledTimestamp
};

var className$5 = Curry._1(Css.style, /* :: */[
      Css.margin2(Css.zero, Css.rem(0.5)),
      /* [] */0
    ]);

function EntryPage$NavigationLink(Props) {
  var title = Props.title;
  var date = Props.date;
  var route_000 = /* year */date.getFullYear();
  var route_001 = /* month */$$Date.getMonth(date);
  var route_002 = /* day */date.getDate();
  var route_003 = /* slug */Curry._1(Utils.slug(undefined), title);
  var route = /* Entry */Block.__(2, [
      route_000,
      route_001,
      route_002,
      route_003
    ]);
  return React.createElement(RouteLink.make, {
              route: route,
              className: className$5,
              children: title
            });
}

var NavigationLink = {
  className: className$5,
  make: EntryPage$NavigationLink
};

var className$6 = Curry._1(Css.style, /* :: */[
      Css.display(Css.flexBox),
      /* :: */[
        Css.alignItems(Css.center),
        /* :: */[
          Css.margin2(Css.rem(1.0), Css.zero),
          /* :: */[
            Style.desktopMediaQuery(/* :: */[
                  Css.margin(Css.zero),
                  /* [] */0
                ]),
            /* [] */0
          ]
        ]
      ]
    ]);

function EntryPage$NavigationLinkContainer(Props) {
  var children = Props.children;
  return React.createElement("div", {
              className: className$6
            }, children);
}

var NavigationLinkContainer = {
  className: className$6,
  make: EntryPage$NavigationLinkContainer
};

var className$7 = Curry._1(Css.merge, /* :: */[
      Style.smallCapsClassName,
      /* :: */[
        Curry._1(Css.style, /* :: */[
              Css.display(Css.flexBox),
              /* :: */[
                Css.flexDirection(Css.columnReverse),
                /* :: */[
                  Css.justifyContent(Css.spaceBetween),
                  /* :: */[
                    Css.alignItems(Css.center),
                    /* :: */[
                      Css.margin2(Css.rem(1.0), Css.zero),
                      /* :: */[
                        Css.fontSize(Css.rem(1.1)),
                        /* :: */[
                          Style.desktopMediaQuery(/* :: */[
                                Css.flexDirection(Css.row),
                                /* :: */[
                                  Css.margin2(Css.rem(3.0), Css.zero),
                                  /* [] */0
                                ]
                              ]),
                          /* [] */0
                        ]
                      ]
                    ]
                  ]
                ]
              ]
            ]),
        /* [] */0
      ]
    ]);

function EntryPage$Navigation(Props) {
  var previous = Props.previous;
  var next = Props.next;
  var previousLink = Relude_Option.getOrElse(null, Relude_Option.map((function (param) {
              return React.createElement(React.Fragment, undefined, React.createElement(Arrow.make, {
                              direction: /* Left */0
                            }), React.createElement(EntryPage$NavigationLink, {
                              title: param.title,
                              date: param.date
                            }));
            }), previous));
  var nextLink = Relude_Option.getOrElse(null, Relude_Option.map((function (param) {
              return React.createElement(React.Fragment, undefined, React.createElement(EntryPage$NavigationLink, {
                              title: param.title,
                              date: param.date
                            }), React.createElement(Arrow.make, {
                              direction: /* Right */1
                            }));
            }), next));
  return React.createElement("footer", {
              className: className$7
            }, React.createElement(EntryPage$NavigationLinkContainer, {
                  children: previousLink
                }), React.createElement(EntryPage$NavigationLinkContainer, {
                  children: nextLink
                }));
}

var Navigation = {
  className: className$7,
  make: EntryPage$Navigation
};

var className$8 = Curry._1(Css.style, /* :: */[
      Css.lastOfType(/* :: */[
            Css.marginBottom(Css.zero),
            /* [] */0
          ]),
      /* [] */0
    ]);

function EntryPage$StyledParagraph(Props) {
  var children = Props.children;
  return React.createElement("p", {
              className: className$8
            }, children);
}

var StyledParagraph = {
  className: className$8,
  make: EntryPage$StyledParagraph
};

function EntryPage(Props) {
  var param = Props.data;
  return React.createElement("article", undefined, React.createElement(EntryPage$Header, {
                  children: null
                }, React.createElement(EntryPage$StyledHeading, {
                      children: param.title
                    }), React.createElement(EntryPage$StyledTimestamp, {
                      date: param.date
                    }), React.createElement(EntryPage$TagList, {
                      tags: param.tags
                    })), React.createElement("section", undefined, React.createElement(Markdown.make, {
                      renderParagraph: EntryPage$StyledParagraph,
                      text: param.text
                    })), React.createElement(EntryPage$Navigation, {
                  previous: param.previous,
                  next: param.next
                }));
}

var make = EntryPage;

export {
  Header ,
  StyledHeading ,
  TagItem ,
  TagList ,
  StyledTimestamp ,
  NavigationLink ,
  NavigationLinkContainer ,
  Navigation ,
  StyledParagraph ,
  make ,
  
}
/* className Not a pure module */
