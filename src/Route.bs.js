// Generated by ReScript, PLEASE EDIT WITH CARE

import * as $$Date from "./bindings/Date.bs.js";
import * as Utils from "./Utils.bs.js";
import * as Relude_Int from "relude/src/Relude_Int.bs.js";
import * as Relude_String from "relude/src/Relude_String.bs.js";

function index(pageOpt, param) {
  var page = pageOpt !== undefined ? pageOpt : 1;
  return {
          TAG: /* Index */0,
          page: page
        };
}

function tagSearch(slug, pageOpt, param) {
  var page = pageOpt !== undefined ? pageOpt : 1;
  return {
          TAG: /* TagSearch */1,
          slug: slug,
          page: page
        };
}

function about(id, param) {
  return {
          TAG: /* About */2,
          id: id
        };
}

function entry(date, title, id, param) {
  return {
          TAG: /* Entry */3,
          year: date.getFullYear(),
          month: $$Date.getMonth(date),
          day: date.getDate(),
          slug: Utils.slug(title),
          id: id
        };
}

function uploads(filename) {
  return {
          TAG: /* Uploads */4,
          filename: filename
        };
}

function fromURL(url) {
  var segments = url.slice(1).split("/").map(function (segment) {
          return decodeURIComponent(segment).trim();
        }).filter(function (segment) {
        return segment.length >= 1;
      });
  var len = segments.length;
  if (len >= 5) {
    return ;
  }
  switch (len) {
    case 0 :
        return {
                TAG: /* Index */0,
                page: 1
              };
    case 1 :
        var page = segments[0];
        if (page === "about") {
          return {
                  TAG: /* About */2,
                  id: undefined
                };
        }
        var page$1 = Relude_Int.fromString(page);
        if (page$1 !== undefined && page$1 >= 1) {
          return {
                  TAG: /* Index */0,
                  page: page$1
                };
        } else {
          return ;
        }
    case 2 :
        var match = segments[0];
        switch (match) {
          case "tag" :
              var slug = segments[1];
              return {
                      TAG: /* TagSearch */1,
                      slug: slug,
                      page: 1
                    };
          case "uploads" :
              var filename = segments[1];
              return {
                      TAG: /* Uploads */4,
                      filename: filename
                    };
          default:
            return ;
        }
    case 3 :
        var match$1 = segments[0];
        if (match$1 !== "tag") {
          return ;
        }
        var slug$1 = segments[1];
        var page$2 = segments[2];
        var page$3 = Relude_Int.fromString(page$2);
        if (page$3 !== undefined && page$3 >= 1) {
          return {
                  TAG: /* TagSearch */1,
                  slug: slug$1,
                  page: page$3
                };
        } else {
          return ;
        }
    case 4 :
        var year = segments[0];
        var month = segments[1];
        var day = segments[2];
        var slug$2 = segments[3];
        var match$2 = Relude_Int.fromString(year);
        var match$3 = Relude_Int.fromString(month);
        var match$4 = Relude_Int.fromString(day);
        if (match$2 !== undefined && match$3 !== undefined && match$4 !== undefined && match$3 >= 1 && match$3 <= 12 && match$4 >= 1 && match$4 <= 31) {
          return {
                  TAG: /* Entry */3,
                  year: match$2,
                  month: match$3,
                  day: match$4,
                  slug: slug$2,
                  id: undefined
                };
        } else {
          return ;
        }
    
  }
}

function _buildEntry(year, month, day, slug) {
  var month$1 = Relude_String.padStart(2, "0", Relude_Int.toString(month));
  var day$1 = Relude_String.padStart(2, "0", Relude_Int.toString(day));
  return "/" + year + "/" + month$1 + "/" + day$1 + "/" + slug + "/";
}

function toURL(route) {
  switch (route.TAG | 0) {
    case /* Index */0 :
        var page = route.page;
        if (page !== 1) {
          return "/" + page + "/";
        } else {
          return "/";
        }
    case /* TagSearch */1 :
        var page$1 = route.page;
        var slug = route.slug;
        if (page$1 !== 1) {
          return "/tag/" + slug + "/" + page$1 + "/";
        } else {
          return "/tag/" + slug + "/";
        }
    case /* About */2 :
        var id = route.id;
        if (id !== undefined) {
          return "/about/#" + id;
        } else {
          return "/about/";
        }
    case /* Entry */3 :
        var id$1 = route.id;
        var slug$1 = route.slug;
        var day = route.day;
        var month = route.month;
        var year = route.year;
        if (id$1 !== undefined) {
          return _buildEntry(year, month, day, slug$1) + ("#" + id$1);
        } else {
          return _buildEntry(year, month, day, slug$1);
        }
    case /* Uploads */4 :
        return "/uploads/" + route.filename;
    
  }
}

export {
  index ,
  tagSearch ,
  about ,
  entry ,
  uploads ,
  fromURL ,
  _buildEntry ,
  toURL ,
  
}
/* Utils Not a pure module */
