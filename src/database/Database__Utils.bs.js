// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Squel from "../bindings/Squel.bs.js";
import * as Utils from "../Utils.bs.js";
import * as Squel$1 from "squel";
import * as Relude_IO from "relude/src/Relude_IO.bs.js";
import * as Database__Connection from "./Database__Connection.bs.js";

function insertAboutPage(text, connection) {
  return Relude_IO.map((function (prim) {
                
              }), Database__Connection.executeInsert(Squel$1.insert().into("AboutPage").setFields({
                        name: text
                      }))(connection));
}

function insertEntry(param, connection) {
  var tags = param.tags;
  var title = param.title;
  var titleSlug = Curry._1(Utils.slug(undefined), title);
  return Relude_IO.flatMap((function (sluggedTags) {
                var mappedTags = sluggedTags.map((function (tag) {
                        return {
                                entrySlug: titleSlug,
                                tagSlug: tag.slug
                              };
                      }));
                return Relude_IO.bimap((function (prim) {
                              
                            }), (function (error) {
                              return /* EntryTagsError */Block.__(2, [error]);
                            }), Database__Connection.executeInsert(Squel.Insert.makeInsertOrIgnore(undefined).into("EntryTag").setFieldsRows(mappedTags))(connection));
              }), Relude_IO.flatMap((function (_id) {
                    var sluggedTags = tags.map((function (name) {
                            return {
                                    slug: Curry._1(Utils.slug(undefined), name),
                                    name: name
                                  };
                          }));
                    return Relude_IO.bimap((function (_id) {
                                  return sluggedTags;
                                }), (function (error) {
                                  return /* TagsError */Block.__(1, [error]);
                                }), Database__Connection.executeInsert(Squel.Insert.makeInsertOrIgnore(undefined).into("Tag").setFieldsRows(sluggedTags))(connection));
                  }), Curry._2(Relude_IO.mapError, (function (error) {
                        return /* EntryError */Block.__(0, [error]);
                      }), Database__Connection.executeInsert(Squel$1.insert().into("Entry").setFields({
                                slug: titleSlug,
                                title: title,
                                timestamp: param.timestamp,
                                text: param.text
                              }))(connection))));
}

function insertAll(aboutText, entries) {
  return (function (param) {
      return Database__Connection.transaction((function (connection) {
                    return Relude_IO.flatMap((function (param) {
                                  return entries.map((function (entry) {
                                                  return Curry._2(Relude_IO.mapError, (function (error) {
                                                                return /* InsertEntryError */Block.__(1, [
                                                                          /* entry */entry,
                                                                          /* error */error
                                                                        ]);
                                                              }), insertEntry(entry, connection));
                                                })).reduce((function (current, accumulator) {
                                                return Relude_IO.flatMap((function (param) {
                                                              return current;
                                                            }), accumulator);
                                              }), /* Pure */Block.__(0, [undefined]));
                                }), Curry._2(Relude_IO.mapError, (function (error) {
                                      return /* InsertAboutPageError */Block.__(0, [error]);
                                    }), insertAboutPage(aboutText, connection)));
                  }), param);
    });
}

export {
  insertAboutPage ,
  insertEntry ,
  insertAll ,
  
}
/* Squel Not a pure module */
