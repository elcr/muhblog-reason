// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE

import * as Path from "path";
import * as Block from "bs-platform/lib/es6/block.js";
import * as Curry from "bs-platform/lib/es6/curry.js";
import * as Constants from "../Constants.bs.js";
import * as Relude_IO from "relude/src/Relude_IO.bs.js";
import * as SQLiteRelude from "sqlite-relude/src/SQLiteRelude.bs.js";
import * as NodeFS__MakeTempDir from "node-fs-bs/src/NodeFS__MakeTempDir.bs.js";

function getPath(siteName) {
  return Relude_IO.map((function (path) {
                return Path.join(path, siteName + ".db");
              }), NodeFS__MakeTempDir.makeTempDir(undefined, Constants.tempDirPrefix));
}

function connect(path) {
  return Relude_IO.flatMap((function (connection) {
                return Relude_IO.map((function (param) {
                              return connection;
                            }), SQLiteRelude.run("PRAGMA journal_mode=WAL", connection));
              }), Relude_IO.flatMap((function (connection) {
                    return Relude_IO.map((function (param) {
                                  return connection;
                                }), SQLiteRelude.run("PRAGMA foreign_keys=ON", connection));
                  }), SQLiteRelude.open_(undefined, path)));
}

function begin_(param) {
  return SQLiteRelude.run("BEGIN", param);
}

function commit(param) {
  return SQLiteRelude.run("COMMIT", param);
}

function rollback(param) {
  return SQLiteRelude.run("ROLLBACK", param);
}

function transaction(func, connection) {
  return Relude_IO.flatMap((function (param) {
                return Relude_IO.unsummonError(Relude_IO.flatMap((function (result) {
                                  if (!result.tag) {
                                    return Relude_IO.summonError(Curry._2(Relude_IO.mapError, (function (error) {
                                                      return /* CommitError */Block.__(2, [error]);
                                                    }), SQLiteRelude.run("COMMIT", connection)));
                                  }
                                  var innerError = result[0];
                                  return Relude_IO.map((function (result) {
                                                var newError;
                                                newError = result.tag ? /* RollbackError */Block.__(3, [result[0]]) : /* InnerError */Block.__(1, [innerError]);
                                                return /* Error */Block.__(1, [newError]);
                                              }), Relude_IO.summonError(SQLiteRelude.run("ROLLBACK", connection)));
                                }), Relude_IO.summonError(Curry._1(func, connection))));
              }), Curry._2(Relude_IO.mapError, (function (error) {
                    return /* BeginError */Block.__(0, [error]);
                  }), SQLiteRelude.run("BEGIN", connection)));
}

var close = SQLiteRelude.close;

export {
  getPath ,
  connect ,
  begin_ ,
  commit ,
  rollback ,
  close ,
  transaction ,
  
}
/* path Not a pure module */
